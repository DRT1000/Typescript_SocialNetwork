[{"C:\\React\\socialnetwork\\src\\API\\api.ts":"1","C:\\React\\socialnetwork\\src\\Components\\Users\\Users.tsx":"2","C:\\React\\socialnetwork\\src\\Components\\Users\\UsersContainer.tsx":"3","C:\\React\\socialnetwork\\src\\Redux\\Users-reducer.tsx":"4","C:\\React\\socialnetwork\\src\\Redux\\ProfileReducer.tsx":"5","C:\\React\\socialnetwork\\src\\Redux\\SidebarReducer.tsx":"6","C:\\React\\socialnetwork\\src\\index.tsx":"7","C:\\React\\socialnetwork\\src\\Components\\Header\\headerContainer.tsx":"8","C:\\React\\socialnetwork\\src\\Components\\Navbar\\Navbar.tsx":"9","C:\\React\\socialnetwork\\src\\Components\\Profile\\ProfileContainer.tsx":"10","C:\\React\\socialnetwork\\src\\Redux\\DialogsReducer.tsx":"11","C:\\React\\socialnetwork\\src\\Redux\\redux-store.tsx":"12","C:\\React\\socialnetwork\\src\\Redux\\authReducer.ts":"13","C:\\React\\socialnetwork\\src\\App.tsx":"14","C:\\React\\socialnetwork\\src\\Components\\Login\\Login.tsx":"15","C:\\React\\socialnetwork\\src\\Components\\Dialogs\\DialogsContainer.tsx":"16","C:\\React\\socialnetwork\\src\\Components\\Dialogs\\Dialogs.tsx":"17","C:\\React\\socialnetwork\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"18","C:\\React\\socialnetwork\\src\\Components\\Dialogs\\Messages\\Messages.tsx":"19"},{"size":663,"mtime":1616429771739,"results":"20","hashOfConfig":"21"},{"size":2561,"mtime":1616665453231,"results":"22","hashOfConfig":"21"},{"size":2261,"mtime":1616665959502,"results":"23","hashOfConfig":"21"},{"size":5872,"mtime":1616668611600,"results":"24","hashOfConfig":"21"},{"size":3244,"mtime":1616669224810,"results":"25","hashOfConfig":"21"},{"size":215,"mtime":1616332523689,"results":"26","hashOfConfig":"21"},{"size":366,"mtime":1614695797702,"results":"27","hashOfConfig":"21"},{"size":1184,"mtime":1616667116354,"results":"28","hashOfConfig":"21"},{"size":795,"mtime":1615223949534,"results":"29","hashOfConfig":"21"},{"size":1430,"mtime":1616855735709,"results":"30","hashOfConfig":"21"},{"size":1769,"mtime":1616321062403,"results":"31","hashOfConfig":"21"},{"size":692,"mtime":1616661403132,"results":"32","hashOfConfig":"21"},{"size":865,"mtime":1616423808618,"results":"33","hashOfConfig":"21"},{"size":1320,"mtime":1616854947534,"results":"34","hashOfConfig":"21"},{"size":107,"mtime":1616854960397,"results":"35","hashOfConfig":"21"},{"size":1177,"mtime":1616855203766,"results":"36","hashOfConfig":"21"},{"size":1622,"mtime":1616855503442,"results":"37","hashOfConfig":"21"},{"size":426,"mtime":1610772391299,"results":"38","hashOfConfig":"21"},{"size":297,"mtime":1610772391319,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ppt1y6",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\socialnetwork\\src\\API\\api.ts",[],"C:\\React\\socialnetwork\\src\\Components\\Users\\Users.tsx",["79"],"C:\\React\\socialnetwork\\src\\Components\\Users\\UsersContainer.tsx",[],"C:\\React\\socialnetwork\\src\\Redux\\Users-reducer.tsx",["80","81"],"import {usersAPI} from \"../API/api\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\n\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\ntype PhotosType = {\r\n    small: string\r\n    big: string\r\n}\r\nexport type UserType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    photos: PhotosType\r\n    location: LocationType\r\n}\r\nexport type InitialStateType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\nconst initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const FOLLOW = \"FOLLOW\"\r\nexport const UNFOLLOW = \"UNFOLLOW\"\r\nexport const SET_USERS = \"SET-USERS\"\r\nexport const SET_CURRENT_PAGE = \"SET-CURRENT-PAGE\"\r\nexport const SET_TOTAL_USER_COUNT = \"SET-TOTAL-USER-COUNT\"\r\nexport const TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\"\r\nexport const TOGGLE_FOLLOWING_IN_PROGRESS = \"TOGGLE-FOLLOWING-IN-PROGRESS\"\r\n\r\nexport type FollowActionType = {\r\n    type: \"FOLLOW\"\r\n    userId: number\r\n}\r\nexport type UnFollowActionType = {\r\n    type: \"UNFOLLOW\"\r\n    userId: number\r\n}\r\nexport type SetUsersActionType = {\r\n    type: \"SET-USERS\"\r\n    users: Array<UserType>\r\n}\r\nexport type SetCurrentPage = {\r\n    type: \"SET-CURRENT-PAGE\"\r\n    currentPage: number\r\n}\r\nexport type SetTotalUserCount = {\r\n    type: \"SET-TOTAL-USER-COUNT\"\r\n    totalUserCount: number\r\n}\r\nexport type FetchingType = {\r\n    type: \"TOGGLE-IS-FETCHING\"\r\n    isFetching: boolean\r\n}\r\nexport type FollowingType = {\r\n    type: \"TOGGLE-FOLLOWING-IN-PROGRESS\"\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\ntype ActionsType =\r\n    FollowActionType\r\n    | UnFollowActionType\r\n    | SetUsersActionType\r\n    | SetCurrentPage\r\n    | SetTotalUserCount\r\n    | FetchingType\r\n    | FollowingType\r\n\r\nfunction usersReducer(state: InitialStateType = initialState, action: ActionsType): InitialStateType {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {...state, users: [...action.users]}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {...state, totalUserCount: action.totalUserCount}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId: number): FollowActionType => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId: number): UnFollowActionType => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPage => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUserCount = (totalUserCount: number): SetTotalUserCount => ({\r\n    type: SET_TOTAL_USER_COUNT,\r\n    totalUserCount\r\n})\r\nexport const toggleIsFetching = (isFetching: boolean): FetchingType => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): FollowingType => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n    isFetching, userId\r\n})\r\n\r\n\r\n type ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\n type ThunkDispatchType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number): ThunkType => {\r\n    return (dispatch: ThunkDispatchType) => {\r\n        dispatch(setCurrentPage(currentPage))\r\n        dispatch(toggleIsFetching(true))\r\n        usersAPI.getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setTotalUserCount(data.totalCount))\r\n            })\r\n    }\r\n}\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: ThunkDispatchType) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return (dispatch: ThunkDispatchType) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode == 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId))\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer","C:\\React\\socialnetwork\\src\\Redux\\ProfileReducer.tsx",[],"C:\\React\\socialnetwork\\src\\Redux\\SidebarReducer.tsx",[],"C:\\React\\socialnetwork\\src\\index.tsx",[],"C:\\React\\socialnetwork\\src\\Components\\Header\\headerContainer.tsx",["82"],"C:\\React\\socialnetwork\\src\\Components\\Navbar\\Navbar.tsx",[],"C:\\React\\socialnetwork\\src\\Components\\Profile\\ProfileContainer.tsx",[],"C:\\React\\socialnetwork\\src\\Redux\\DialogsReducer.tsx",[],"C:\\React\\socialnetwork\\src\\Redux\\redux-store.tsx",[],"C:\\React\\socialnetwork\\src\\Redux\\authReducer.ts",[],"C:\\React\\socialnetwork\\src\\App.tsx",[],"C:\\React\\socialnetwork\\src\\Components\\Login\\Login.tsx",[],"C:\\React\\socialnetwork\\src\\Components\\Dialogs\\DialogsContainer.tsx",["83"],"C:\\React\\socialnetwork\\src\\Components\\Dialogs\\Dialogs.tsx",[],"C:\\React\\socialnetwork\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\React\\socialnetwork\\src\\Components\\Dialogs\\Messages\\Messages.tsx",[],{"ruleId":"84","severity":1,"message":"85","line":37,"column":25,"nodeType":"86","endLine":37,"endColumn":120},{"ruleId":"87","severity":1,"message":"88","line":161,"column":46,"nodeType":"89","messageId":"90","endLine":161,"endColumn":48},{"ruleId":"87","severity":1,"message":"88","line":173,"column":46,"nodeType":"89","messageId":"90","endLine":173,"endColumn":48},{"ruleId":"91","severity":1,"message":"92","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":13},{"ruleId":"91","severity":1,"message":"95","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'React' is defined but never used."]